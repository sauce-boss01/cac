-- Replace "GearName" with the name of the gear you want to check for
local gearNameToCheck = "430066424"
_G.Enabled = true

local function checkAndPrintMessage(player)
    if hasGear(player) then
        local function toggleGear()
            local args = {
                [1] = {
                    ["Action"] = "ToggleGear",
                    ["Id"] = 430066424
                }
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("CatalogGuiRemote"):InvokeServer(unpack(args))
        end
        
        local function activateGearRepeatedly()
            local speaker = game.Players.LocalPlayer
            local Backpack = speaker:FindFirstChildOfClass("Backpack")
            local ammount = 999
            local delay_ = 0.00010
        
            for _, v in ipairs(Backpack:GetChildren()) do
                v.Parent = speaker.Character
                task.spawn(function()
                    for _ = 1, ammount do
                        v:Activate()
                        if delay_ then
                            wait(delay_)
                        end
                    end
                    v.Parent = Backpack
                end)
            end
        
            wait(0.00011)
        
        end

-- Function to check if the player has the specified gear
local function hasGear(player)
    local character = player.Character
    if character then
        local backpack = player.Backpack
        if backpack then
            for _, item in pairs(backpack:GetChildren()) do
                if item:IsA("Tool") and item.Name == gearNameToCheck then
                    return true
                end
            end
        end
    end
    return false
end

task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)task.spawn(function()
    while _G.Enabled do
        activateGearRepeatedly()
    end
end)

    else
        print(player.Name .. " no" .. gearNameToCheck)
    end
end

local function gearCheckTask()
    while true do
        for _, player in pairs(game.Players:GetPlayers()) do
            checkAndPrintMessage(player)
        end
        wait(1)  
    end
end

-- Spawn the task
local task = spawn(gearCheckTask)

